#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('cambio-saldo:server');
var http = require('http');

/**
 * Get port from environment and store in Express.
 */
let puerto = '3001';
var port = normalizePort(process.env.PORT || puerto);
app.set('port', port);

/**
 * Create HTTP server.
 */


// const enforce = require('express-sslify');

// app.use(enforce.HTTPS({ trustProtoHeader: true }));
var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */
 app.all('*', ensureSecure);
 function ensureSecure(req, res, next){
   console.log(req.secure);
   console.log("abajo de secure");
  if(!req.secure){
    // OK, continue
    console.log("entro en req.secure");
    return next();
  };
  // handle port numbers if you need non defaults
  // res.redirect('https://' + req.host + req.url); // express 3.x
  res.redirect('https://' + req.hostname + req.url); // express 4.x
}
//  app.use(function(req, res, next) {
//    console.log("Arriba de req");
//   if (req.headers['x-request-id'] !== 'https') {
//     console.log("entra en la primer condicion");
//     let prueba = 'https://' + req.headers.host
//     console.log(prueba);
//     return res.redirect(prueba);
//     console.log("NO REDIRECCIONO");
//   }
//   else {
//     next();
//   }
// });
//          NO FUNCIONA
// app.use((req, res, next) =>{
//   if (req.headers['x-forwarded-proto'] !== 'https') {
//       return res.redirect(['https://', req.get('Host'), req.url].join(''));
//   }
//   return next();
// });

//      NO FUNCIONA
// app.use((req, res, next) => {
//   if (!req.secure) {
//     return res.redirect('https://' + req.headers.host + req.url);
//   }
//   next();
// });

//NO FUNCIONA
// app.enable('trust proxy')
// app.use((req, res, next) => {
//   console.log("+++++++++++++++++++++app.use");
//   req.secure ? next() : res.redirect('https://' + req.headers.host + req.url)
// })

//    *********** NO FUNCIONA*************
// app.use (function (req, res, next) {
//   console.log(req.headers);
//   if (req.secure) {
//     console.log("REQ.SEGURE+++++++++++++++++++++++++++++");
//           // request was via https, so do no special handling
//           next();
//   } else {
//     console.log("REDIRECCION --------------------------------------------------------------");
//     console.log(req.headers.host);
//     console.log(req.body);
//           // request was via http, so redirect to https
//         //  return res.redirect('www.google.com.ar');

//         //  return res.redirect('https://' + req.headers.host);
//     res.redirect('https://' + req.headers.host);
//   }
// });
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
console.log("Servidor corriendo en el puerto " + port);
console.log("Prueba..");